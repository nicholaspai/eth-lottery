'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _verify = require('../scripts/verify');

var _verify2 = _interopRequireDefault(_verify);

var _runWithTruffle = require('../utils/runWithTruffle');

var _runWithTruffle2 = _interopRequireDefault(_runWithTruffle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const name = 'verify';
const signature = `${name} <contract-alias>`;
const description = 'verify a contract with etherchain. Provide a contract name.';

const register = program => program.command(signature, { noHelp: true }).description(description).option('-n, --network <network>', 'network where to verify the contract').option('-o, --optimizer', 'enables optimizer option').option('--optimizer-runs <runs>', 'specify number of runs if optimizer enabled.').option('--remote <remote>', 'specify remote endpoint to use for verification').action(action);

function action(contractAlias, options) {
  const { optimizer, optimizerRuns } = options;
  if (optimizer && !optimizerRuns) {
    throw new Error('Cannot verify contract without defining optimizer runs');
  }
  (0, _runWithTruffle2.default)(opts => (0, _verify2.default)(contractAlias, _extends({}, options, opts)), options);
}

exports.default = { name, signature, description, register, action };