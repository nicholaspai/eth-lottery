{
  "contractName": "ConditionalEscrowMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferPrimary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "primary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "depositsOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        },
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "setAllowed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawalAllowed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b506200003133620000376401000000000262000497176401000000009004565b620004a5565b60008060019054906101000a900460ff168062000069575062000068620001a0640100000000026401000000009004565b5b806200008157506000809054906101000a900460ff16155b15156200011c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506200018282620001b16401000000000262000920176401000000009004565b80600060016101000a81548160ff0219169083151502179055505050565b600080303b90506000811491505090565b60008060019054906101000a900460ff1680620001e35750620001e2620001a0640100000000026401000000009004565b5b80620001fb57506000809054906101000a900460ff16155b151562000296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550620002fc826200031a6401000000000262000a80176401000000009004565b80600060016101000a81548160ff0219169083151502179055505050565b60008060019054906101000a900460ff16806200034c57506200034b620001a0640100000000026401000000009004565b5b806200036457506000809054906101000a900460ff16155b1515620003ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff0219169083151502179055505050565b610c2380620004b56000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632348238c146100935780634697f05d146100d657806351cff8d914610125578063685ca19414610168578063c4d66de8146101c3578063c6dbdf6114610206578063e3a9db1a1461025d578063f340fa01146102b4575b600080fd5b34801561009f57600080fd5b506100d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ea565b005b3480156100e257600080fd5b50610123600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506103c6565b005b34801561013157600080fd5b50610166600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610421565b005b34801561017457600080fd5b506101a9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610441565b604051808215151515815260200191505060405180910390f35b3480156101cf57600080fd5b50610204600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610497565b005b34801561021257600080fd5b5061021b6105d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026957600080fd5b5061029e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610600565b6040518082815260200191505060405180910390f35b6102e8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610649565b005b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561038257600080fd5b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8060cb60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61042a81610441565b151561043557600080fd5b61043e81610791565b50565b600060cb60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060019054906101000a900460ff16806104b757506104b661090f565b5b806104ce57506000809054906101000a900460ff16155b1515610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506105b882610920565b80600060016101000a81548160ff0219169083151502179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106a757600080fd5b3490506106fc81606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a5f90919063ffffffff16565b606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107ef57600080fd5b606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108bc573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b600080303b90506000811491505090565b60008060019054906101000a900460ff1680610940575061093f61090f565b5b8061095757506000809054906101000a900460ff16155b15156109f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610a4182610a80565b80600060016101000a81548160ff0219169083151502179055505050565b6000808284019050838110151515610a7657600080fd5b8091505092915050565b60008060019054906101000a900460ff1680610aa05750610a9f61090f565b5b80610ab757506000809054906101000a900460ff16155b1515610b51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff02191690831515021790555050505600a165627a7a72305820be33d8723e3c906deb1b222af2c6c55337999e2f3c777ee51d5ff708602ae4d80029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632348238c146100935780634697f05d146100d657806351cff8d914610125578063685ca19414610168578063c4d66de8146101c3578063c6dbdf6114610206578063e3a9db1a1461025d578063f340fa01146102b4575b600080fd5b34801561009f57600080fd5b506100d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ea565b005b3480156100e257600080fd5b50610123600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506103c6565b005b34801561013157600080fd5b50610166600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610421565b005b34801561017457600080fd5b506101a9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610441565b604051808215151515815260200191505060405180910390f35b3480156101cf57600080fd5b50610204600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610497565b005b34801561021257600080fd5b5061021b6105d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026957600080fd5b5061029e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610600565b6040518082815260200191505060405180910390f35b6102e8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610649565b005b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561038257600080fd5b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8060cb60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61042a81610441565b151561043557600080fd5b61043e81610791565b50565b600060cb60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060019054906101000a900460ff16806104b757506104b661090f565b5b806104ce57506000809054906101000a900460ff16155b1515610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506105b882610920565b80600060016101000a81548160ff0219169083151502179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106a757600080fd5b3490506106fc81606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a5f90919063ffffffff16565b606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107ef57600080fd5b606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108bc573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b600080303b90506000811491505090565b60008060019054906101000a900460ff1680610940575061093f61090f565b5b8061095757506000809054906101000a900460ff16155b15156109f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610a4182610a80565b80600060016101000a81548160ff0219169083151502179055505050565b6000808284019050838110151515610a7657600080fd5b8091505092915050565b60008060019054906101000a900460ff1680610aa05750610a9f61090f565b5b80610ab757506000809054906101000a900460ff16155b1515610b51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff02191690831515021790555050505600a165627a7a72305820be33d8723e3c906deb1b222af2c6c55337999e2f3c777ee51d5ff708602ae4d80029",
  "sourceMap": "109:378:34:-;;;211:72;8:9:-1;5:2;;;30:1;27;20:12;5:2;211:72:34;238:40;267:10;238:28;;;;;:40;;;:::i;:::-;109:378;;266:91:88;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;;;:15;;;:::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;327:25:88;345:6;327:17;;;;;:25;;;:::i;:::-;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;266:91:88;;:::o;1341:467:120:-;1388:4;1729:10;1774:7;1762:20;1756:26;;1802:1;1796:2;:7;1789:14;;1341:467;;:::o;674:94:89:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;;;:15;;;:::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;735:28:89;756:6;735:20;;;;;:28;;;:::i;:::-;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;674:94:89;;:::o;364:83:87:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;;;:15;;;:::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;436:6:87;425:8;;:17;;;;;;;;;;;;;;;;;;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;364:83:87;;:::o;109:378:34:-;;;;;;;",
  "deployedSourceMap": "109:378:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:133:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:133:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;287:92:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;287:92:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;616:111:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;616:111:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:102:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:102:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:91:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;266:91:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;608:75:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;608:75:87;;;;;;;;;;;;;;;;;;;;;;;;;;;772:99:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;772:99:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:133:87;583:8;;;;;;;;;;;569:22;;:10;:22;;;561:31;;;;;;;;785:1;764:23;;:9;:23;;;;756:32;;;;;;;;806:9;795:8;;:20;;;;;;;;;;;;;;;;;;687:133;:::o;287:92:34:-;367:7;349:8;:15;358:5;349:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;287:92;;:::o;616:111:88:-;670:24;688:5;670:17;:24::i;:::-;662:33;;;;;;;;701:21;716:5;701:14;:21::i;:::-;616:111;:::o;383:102:34:-;446:4;465:8;:15;474:5;465:15;;;;;;;;;;;;;;;;;;;;;;;;;458:22;;383:102;;;:::o;266:91:88:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;:15::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;327:25:88;345:6;327:17;:25::i;:::-;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;266:91:88;;:::o;608:75:87:-;648:7;670:8;;;;;;;;;;;663:15;;608:75;:::o;772:99:89:-;828:7;850:9;:16;860:5;850:16;;;;;;;;;;;;;;;;843:23;;772:99;;;:::o;1000:185::-;1065:14;583:8:87;;;;;;;;;;;569:22;;:10;:22;;;561:31;;;;;;;;1082:9:89;1065:26;;1116:28;1137:6;1116:9;:16;1126:5;1116:16;;;;;;;;;;;;;;;;:20;;:28;;;;:::i;:::-;1097:9;:16;1107:5;1097:16;;;;;;;;;;;;;;;:47;;;;1166:5;1156:24;;;1173:6;1156:24;;;;;;;;;;;;;;;;;;1000:185;;:::o;1330:191::-;1388:15;583:8:87;;;;;;;;;;;569:22;;:10;:22;;;561:31;;;;;;;;1406:9:89;:16;1416:5;1406:16;;;;;;;;;;;;;;;;1388:34;;1448:1;1429:9;:16;1439:5;1429:16;;;;;;;;;;;;;;;:20;;;;1456:5;:14;;:23;1471:7;1456:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1456:23:89;1501:5;1491:25;;;1508:7;1491:25;;;;;;;;;;;;;;;;;;1330:191;;:::o;1341:467:120:-;1388:4;1729:10;1774:7;1762:20;1756:26;;1802:1;1796:2;:7;1789:14;;1341:467;;:::o;674:94:89:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;:15::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;735:28:89;756:6;735:20;:28::i;:::-;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;674:94:89;;:::o;1273:131:30:-;1331:7;1346:9;1362:1;1358;:5;1346:17;;1382:1;1377;:6;;1369:15;;;;;;;;1398:1;1391:8;;1273:131;;;;;:::o;364:83:87:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;:15::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;436:6:87;425:8;;:17;;;;;;;;;;;;;;;;;;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;364:83:87;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../payment/ConditionalEscrow.sol\";\n\n\n// mock class using ConditionalEscrow\ncontract ConditionalEscrowMock is ConditionalEscrow {\n  mapping(address => bool) private _allowed;\n\n  constructor() public {\n    ConditionalEscrow.initialize(msg.sender);\n  }\n\n  function setAllowed(address payee, bool allowed) public {\n    _allowed[payee] = allowed;\n  }\n\n  function withdrawalAllowed(address payee) public view returns (bool) {\n    return _allowed[payee];\n  }\n}\n",
  "sourcePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/mocks/ConditionalEscrowMock.sol",
  "ast": {
    "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/mocks/ConditionalEscrowMock.sol",
    "exportedSymbols": {
      "ConditionalEscrowMock": [
        3671
      ]
    },
    "id": 3672,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3626,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:34"
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/payment/ConditionalEscrow.sol",
        "file": "../payment/ConditionalEscrow.sol",
        "id": 3627,
        "nodeType": "ImportDirective",
        "scope": 3672,
        "sourceUnit": 6204,
        "src": "26:42:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3628,
              "name": "ConditionalEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6203,
              "src": "143:17:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConditionalEscrow_$6203",
                "typeString": "contract ConditionalEscrow"
              }
            },
            "id": 3629,
            "nodeType": "InheritanceSpecifier",
            "src": "143:17:34"
          }
        ],
        "contractDependencies": [
          6151,
          6203,
          6322,
          9823
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3671,
        "linearizedBaseContracts": [
          3671,
          6203,
          6322,
          6151,
          9823
        ],
        "name": "ConditionalEscrowMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3633,
            "name": "_allowed",
            "nodeType": "VariableDeclaration",
            "scope": 3671,
            "src": "165:41:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3632,
              "keyType": {
                "id": 3630,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "173:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "165:24:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3631,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "184:4:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3643,
              "nodeType": "Block",
              "src": "232:51:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3639,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9838,
                          "src": "267:3:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "267:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3636,
                        "name": "ConditionalEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "238:17:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ConditionalEscrow_$6203_$",
                          "typeString": "type(contract ConditionalEscrow)"
                        }
                      },
                      "id": 3638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6173,
                      "src": "238:28:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "238:40:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3642,
                  "nodeType": "ExpressionStatement",
                  "src": "238:40:34"
                }
              ]
            },
            "documentation": null,
            "id": 3644,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:2:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 3635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "232:0:34"
            },
            "scope": 3671,
            "src": "211:72:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3657,
              "nodeType": "Block",
              "src": "343:36:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3651,
                        "name": "_allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3633,
                        "src": "349:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3653,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3652,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3646,
                        "src": "358:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "349:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3654,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3648,
                      "src": "367:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "349:25:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3656,
                  "nodeType": "ExpressionStatement",
                  "src": "349:25:34"
                }
              ]
            },
            "documentation": null,
            "id": 3658,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3646,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3658,
                  "src": "307:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "307:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3648,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3658,
                  "src": "322:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3647,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "306:29:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 3650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:34"
            },
            "scope": 3671,
            "src": "287:92:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3669,
              "nodeType": "Block",
              "src": "452:33:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3665,
                      "name": "_allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3633,
                      "src": "465:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3667,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3666,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3660,
                      "src": "474:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "465:15:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3664,
                  "id": 3668,
                  "nodeType": "Return",
                  "src": "458:22:34"
                }
              ]
            },
            "documentation": null,
            "id": 3670,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "withdrawalAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3660,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3670,
                  "src": "410:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:15:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3663,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3670,
                  "src": "446:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3662,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "445:6:34"
            },
            "scope": 3671,
            "src": "383:102:34",
            "stateMutability": "view",
            "superFunction": 6180,
            "visibility": "public"
          }
        ],
        "scope": 3672,
        "src": "109:378:34"
      }
    ],
    "src": "0:488:34"
  },
  "legacyAST": {
    "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/mocks/ConditionalEscrowMock.sol",
    "exportedSymbols": {
      "ConditionalEscrowMock": [
        3671
      ]
    },
    "id": 3672,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3626,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:34"
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/payment/ConditionalEscrow.sol",
        "file": "../payment/ConditionalEscrow.sol",
        "id": 3627,
        "nodeType": "ImportDirective",
        "scope": 3672,
        "sourceUnit": 6204,
        "src": "26:42:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3628,
              "name": "ConditionalEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6203,
              "src": "143:17:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConditionalEscrow_$6203",
                "typeString": "contract ConditionalEscrow"
              }
            },
            "id": 3629,
            "nodeType": "InheritanceSpecifier",
            "src": "143:17:34"
          }
        ],
        "contractDependencies": [
          6151,
          6203,
          6322,
          9823
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3671,
        "linearizedBaseContracts": [
          3671,
          6203,
          6322,
          6151,
          9823
        ],
        "name": "ConditionalEscrowMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3633,
            "name": "_allowed",
            "nodeType": "VariableDeclaration",
            "scope": 3671,
            "src": "165:41:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3632,
              "keyType": {
                "id": 3630,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "173:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "165:24:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3631,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "184:4:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3643,
              "nodeType": "Block",
              "src": "232:51:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3639,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9838,
                          "src": "267:3:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "267:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3636,
                        "name": "ConditionalEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "238:17:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ConditionalEscrow_$6203_$",
                          "typeString": "type(contract ConditionalEscrow)"
                        }
                      },
                      "id": 3638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6173,
                      "src": "238:28:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "238:40:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3642,
                  "nodeType": "ExpressionStatement",
                  "src": "238:40:34"
                }
              ]
            },
            "documentation": null,
            "id": 3644,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:2:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 3635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "232:0:34"
            },
            "scope": 3671,
            "src": "211:72:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3657,
              "nodeType": "Block",
              "src": "343:36:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3651,
                        "name": "_allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3633,
                        "src": "349:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3653,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3652,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3646,
                        "src": "358:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "349:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3654,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3648,
                      "src": "367:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "349:25:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3656,
                  "nodeType": "ExpressionStatement",
                  "src": "349:25:34"
                }
              ]
            },
            "documentation": null,
            "id": 3658,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3646,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3658,
                  "src": "307:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "307:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3648,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3658,
                  "src": "322:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3647,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "306:29:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 3650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:34"
            },
            "scope": 3671,
            "src": "287:92:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3669,
              "nodeType": "Block",
              "src": "452:33:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3665,
                      "name": "_allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3633,
                      "src": "465:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3667,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3666,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3660,
                      "src": "474:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "465:15:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3664,
                  "id": 3668,
                  "nodeType": "Return",
                  "src": "458:22:34"
                }
              ]
            },
            "documentation": null,
            "id": 3670,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "withdrawalAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3660,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3670,
                  "src": "410:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:15:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3663,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3670,
                  "src": "446:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3662,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "445:6:34"
            },
            "scope": 3671,
            "src": "383:102:34",
            "stateMutability": "view",
            "superFunction": 6180,
            "visibility": "public"
          }
        ],
        "scope": 3672,
        "src": "109:378:34"
      }
    ],
    "src": "0:488:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-22T15:51:22.522Z"
}