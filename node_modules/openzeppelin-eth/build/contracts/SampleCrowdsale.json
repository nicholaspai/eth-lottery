{
  "contractName": "SampleCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "goal",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "goal",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052600060d060006101000a81548160ff02191690831515021790555034801561002b57600080fd5b50612a978061003b6000396000f300608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b1461011d5780632c4e722e1461014c578063355274ea1461017757806340193883146101a25780634042b66f146101cd57806347535d7b146101f85780634b6753bc146102275780634bb278f3146102525780634f93594514610269578063521eb273146102985780635da8998c146102ef5780637d3d652214610384578063b3f05b97146103b3578063b4988fd0146103e2578063b7a8807c1461044f578063bffa55d51461047a578063e4a30116146104bd578063ec8ac4d8146104f4578063fc0c546a1461052a578063fe4b84df14610581575b61011b336105ae565b005b34801561012957600080fd5b5061013261067c565b604051808215151515815260200191505060405180910390f35b34801561015857600080fd5b50610161610688565b6040518082815260200191505060405180910390f35b34801561018357600080fd5b5061018c610692565b6040518082815260200191505060405180910390f35b3480156101ae57600080fd5b506101b761069c565b6040518082815260200191505060405180910390f35b3480156101d957600080fd5b506101e26106a7565b6040518082815260200191505060405180910390f35b34801561020457600080fd5b5061020d6106b1565b604051808215151515815260200191505060405180910390f35b34801561023357600080fd5b5061023c6106cc565b6040518082815260200191505060405180910390f35b34801561025e57600080fd5b506102676106d6565b005b34801561027557600080fd5b5061027e610756565b604051808215151515815260200191505060405180910390f35b3480156102a457600080fd5b506102ad61076a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102fb57600080fd5b50610382600480360381019080803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610794565b005b34801561039057600080fd5b50610399610906565b604051808215151515815260200191505060405180910390f35b3480156103bf57600080fd5b506103c861091b565b604051808215151515815260200191505060405180910390f35b3480156103ee57600080fd5b5061044d60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610932565b005b34801561045b57600080fd5b50610464610b7a565b6040518082815260200191505060405180910390f35b34801561048657600080fd5b506104bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b84565b005b3480156104c957600080fd5b506104f26004803603810190808035906020019092919080359060200190929190505050610c84565b005b610528600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105ae565b005b34801561053657600080fd5b5061053f610df7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058d57600080fd5b506105ac60048036038101908080359060200190929190505050610e21565b005b6000803491506105be838361114e565b6105c78261116f565b90506105de8260365461118d90919063ffffffff16565b6036819055506105ee83826111ae565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a361066583836111bc565b61066d6111c0565b6106778383611299565b505050565b6000609d544211905090565b6000603554905090565b6000606954905090565b600061010354905090565b6000603654905090565b6000609c5442101580156106c75750609d544211155b905090565b6000609d54905090565b60d060009054906101000a900460ff161515156106f257600080fd5b6106fa61067c565b151561070557600080fd5b61070d61129d565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1600160d060006101000a81548160ff021916908315150217905550565b60006069546107636106a7565b1015905090565b6000603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900460ff16806107b457506107b3611497565b5b806107cb57506000809054906101000a900460ff16155b1515610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506108b7868685610932565b6108c0846114a8565b6108ca8888610c84565b6108d382610e21565b8382111515156108e257600080fd5b80600060016101000a81548160ff0219169083151502179055505050505050505050565b6000610103546109146106a7565b1015905090565b600060d060009054906101000a900460ff16905090565b60008060019054906101000a900460ff16806109525750610951611497565b5b8061096957506000809054906101000a900460ff16155b1515610a03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550600084111515610a5957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a9557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610ad157600080fd5b8360358190555082603460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff02191690831515021790555050505050565b6000609c54905090565b610b8c61091b565b1515610b9757600080fd5b610b9f610906565b151515610bab57600080fd5b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b5050505050565b60008060019054906101000a900460ff1680610ca45750610ca3611497565b5b80610cbb57506000809054906101000a900460ff16155b1515610d55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610da4611604565b1515610dac57fe5b428310151515610dbb57600080fd5b828210151515610dca57600080fd5b82609c8190555081609d8190555080600060016101000a81548160ff021916908315150217905550505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900460ff1680610e415750610e40611497565b5b80610e5857506000809054906101000a900460ff16155b1515610ef2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610f416116c6565b1515610f4957fe5b600082111515610f5857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1661010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561112857610fb861189c565b604051809103906000f080158015610fd4573d6000803e3d6000fd5b5061010460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663485cc95561105d61076a565b306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561110f57600080fd5b505af1158015611123573d6000803e3d6000fd5b505050505b816101038190555080600060016101000a81548160ff0219169083151502179055505050565b6111566106b1565b151561116157600080fd5b61116b82826116e0565b5050565b60006111866035548361171890919063ffffffff16565b9050919050565b60008082840190508381101515156111a457600080fd5b8091505092915050565b6111b88282611756565b5050565b5050565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b15801561127e57600080fd5b505af1158015611292573d6000803e3d6000fd5b5050505050565b5050565b6112a5610906565b156113ed5761010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561133157600080fd5b505af1158015611345573d6000803e3d6000fd5b5050505061010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156113d057600080fd5b505af11580156113e4573d6000803e3d6000fd5b5050505061148d565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561147457600080fd5b505af1158015611488573d6000803e3d6000fd5b505050505b61149561184a565b565b600080303b90506000811491505090565b60008060019054906101000a900460ff16806114c857506114c7611497565b5b806114df57506000809054906101000a900460ff16155b1515611579576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506115c8611604565b15156115d057fe5b6000821115156115df57600080fd5b8160698190555080600060016101000a81548160ff0219169083151502179055505050565b6000806035541180156116665750600073ffffffffffffffffffffffffffffffffffffffff16603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b80156116c15750600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600080609c541180156116db57506000609d54115b905090565b6116ea828261184c565b606954611707826116f96106a7565b61118d90919063ffffffff16565b1115151561171457600080fd5b5050565b600080600084141561172d576000915061174f565b828402905082848281151561173e57fe5b0414151561174b57600080fd5b8091505b5092915050565b61175e610df7565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561180057600080fd5b505af1158015611814573d6000803e3d6000fd5b505050506040513d602081101561182a57600080fd5b8101908080519060200190929190505050151561184657600080fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561188857600080fd5b6000811415151561189857600080fd5b5050565b6040516111bf806118ad833901905600608060405234801561001057600080fd5b5061119f806100206000396000f3006080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632348238c146100ca57806338af3eed1461010d57806343d726d614610164578063485cc9551461017b57806351cff8d9146101de578063685ca194146102215780638c52dc411461027c5780639af6549a14610293578063c19d93fb146102aa578063c4d66de8146102e3578063c6dbdf6114610326578063e3a9db1a1461037d578063f340fa01146103d4575b600080fd5b3480156100d657600080fd5b5061010b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061040a565b005b34801561011957600080fd5b506101226104e6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017057600080fd5b50610179610510565b005b34801561018757600080fd5b506101dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105f2565b005b3480156101ea57600080fd5b5061021f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d3565b005b34801561022d57600080fd5b50610262600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107f3565b604051808215151515815260200191505060405180910390f35b34801561028857600080fd5b50610291610825565b005b34801561029f57600080fd5b506102a8610907565b005b3480156102b657600080fd5b506102bf6109bc565b604051808260028111156102cf57fe5b60ff16815260200191505060405180910390f35b3480156102ef57600080fd5b50610324600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109d3565b005b34801561033257600080fd5b5061033b610b12565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561038957600080fd5b506103be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b3c565b6040518082815260200191505060405180910390f35b610408600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b85565b005b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561046657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156104a257600080fd5b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060cb60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561056c57600080fd5b6000600281111561057957fe5b60cb60009054906101000a900460ff16600281111561059457fe5b1415156105a057600080fd5b600260cb60006101000a81548160ff021916908360028111156105bf57fe5b02179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1565b60008060019054906101000a900460ff16806106125750610611610bc5565b5b8061062957506000809054906101000a900460ff16155b15156106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610713826109d3565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561074f57600080fd5b8260cb60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060cb60006101000a81548160ff021916908360028111156107af57fe5b021790555080600060016101000a81548160ff021916908315150217905550505050565b6107dc816107f3565b15156107e757600080fd5b6107f081610bd6565b50565b60006001600281111561080257fe5b60cb60009054906101000a900460ff16600281111561081d57fe5b149050919050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561088157600080fd5b6000600281111561088e57fe5b60cb60009054906101000a900460ff1660028111156108a957fe5b1415156108b557600080fd5b600160cb60006101000a81548160ff021916908360028111156108d457fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b60028081111561091357fe5b60cb60009054906101000a900460ff16600281111561092e57fe5b14151561093a57600080fd5b60cb60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156109b9573d6000803e3d6000fd5b50565b600060cb60009054906101000a900460ff16905090565b60008060019054906101000a900460ff16806109f357506109f2610bc5565b5b80610a0a57506000809054906101000a900460ff16155b1515610aa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610af482610d54565b80600060016101000a81548160ff0219169083151502179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006002811115610b9257fe5b60cb60009054906101000a900460ff166002811115610bad57fe5b141515610bb957600080fd5b610bc281610e93565b50565b600080303b90506000811491505090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c3457600080fd5b606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d01573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b60008060019054906101000a900460ff1680610d745750610d73610bc5565b5b80610d8b57506000809054906101000a900460ff16155b1515610e25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610e7582610fdb565b80600060016101000a81548160ff0219169083151502179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ef157600080fd5b349050610f4681606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461115290919063ffffffff16565b606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b60008060019054906101000a900460ff1680610ffb5750610ffa610bc5565b5b8061101257506000809054906101000a900460ff16155b15156110ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff0219169083151502179055505050565b600080828401905083811015151561116957600080fd5b80915050929150505600a165627a7a72305820e704fec39de84f26bd48874ff5a7c2d6f17cf272f15325dd3a3260ea376b34d60029a165627a7a72305820e63f74fc1884a03f904e1047a8948860442aa390bcd185f4d7c7288ecf75a3e90029",
  "deployedBytecode": "0x608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b1461011d5780632c4e722e1461014c578063355274ea1461017757806340193883146101a25780634042b66f146101cd57806347535d7b146101f85780634b6753bc146102275780634bb278f3146102525780634f93594514610269578063521eb273146102985780635da8998c146102ef5780637d3d652214610384578063b3f05b97146103b3578063b4988fd0146103e2578063b7a8807c1461044f578063bffa55d51461047a578063e4a30116146104bd578063ec8ac4d8146104f4578063fc0c546a1461052a578063fe4b84df14610581575b61011b336105ae565b005b34801561012957600080fd5b5061013261067c565b604051808215151515815260200191505060405180910390f35b34801561015857600080fd5b50610161610688565b6040518082815260200191505060405180910390f35b34801561018357600080fd5b5061018c610692565b6040518082815260200191505060405180910390f35b3480156101ae57600080fd5b506101b761069c565b6040518082815260200191505060405180910390f35b3480156101d957600080fd5b506101e26106a7565b6040518082815260200191505060405180910390f35b34801561020457600080fd5b5061020d6106b1565b604051808215151515815260200191505060405180910390f35b34801561023357600080fd5b5061023c6106cc565b6040518082815260200191505060405180910390f35b34801561025e57600080fd5b506102676106d6565b005b34801561027557600080fd5b5061027e610756565b604051808215151515815260200191505060405180910390f35b3480156102a457600080fd5b506102ad61076a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102fb57600080fd5b50610382600480360381019080803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610794565b005b34801561039057600080fd5b50610399610906565b604051808215151515815260200191505060405180910390f35b3480156103bf57600080fd5b506103c861091b565b604051808215151515815260200191505060405180910390f35b3480156103ee57600080fd5b5061044d60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610932565b005b34801561045b57600080fd5b50610464610b7a565b6040518082815260200191505060405180910390f35b34801561048657600080fd5b506104bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b84565b005b3480156104c957600080fd5b506104f26004803603810190808035906020019092919080359060200190929190505050610c84565b005b610528600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105ae565b005b34801561053657600080fd5b5061053f610df7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058d57600080fd5b506105ac60048036038101908080359060200190929190505050610e21565b005b6000803491506105be838361114e565b6105c78261116f565b90506105de8260365461118d90919063ffffffff16565b6036819055506105ee83826111ae565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a361066583836111bc565b61066d6111c0565b6106778383611299565b505050565b6000609d544211905090565b6000603554905090565b6000606954905090565b600061010354905090565b6000603654905090565b6000609c5442101580156106c75750609d544211155b905090565b6000609d54905090565b60d060009054906101000a900460ff161515156106f257600080fd5b6106fa61067c565b151561070557600080fd5b61070d61129d565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1600160d060006101000a81548160ff021916908315150217905550565b60006069546107636106a7565b1015905090565b6000603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900460ff16806107b457506107b3611497565b5b806107cb57506000809054906101000a900460ff16155b1515610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506108b7868685610932565b6108c0846114a8565b6108ca8888610c84565b6108d382610e21565b8382111515156108e257600080fd5b80600060016101000a81548160ff0219169083151502179055505050505050505050565b6000610103546109146106a7565b1015905090565b600060d060009054906101000a900460ff16905090565b60008060019054906101000a900460ff16806109525750610951611497565b5b8061096957506000809054906101000a900460ff16155b1515610a03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550600084111515610a5957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a9557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610ad157600080fd5b8360358190555082603460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff02191690831515021790555050505050565b6000609c54905090565b610b8c61091b565b1515610b9757600080fd5b610b9f610906565b151515610bab57600080fd5b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b5050505050565b60008060019054906101000a900460ff1680610ca45750610ca3611497565b5b80610cbb57506000809054906101000a900460ff16155b1515610d55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610da4611604565b1515610dac57fe5b428310151515610dbb57600080fd5b828210151515610dca57600080fd5b82609c8190555081609d8190555080600060016101000a81548160ff021916908315150217905550505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900460ff1680610e415750610e40611497565b5b80610e5857506000809054906101000a900460ff16155b1515610ef2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610f416116c6565b1515610f4957fe5b600082111515610f5857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1661010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561112857610fb861189c565b604051809103906000f080158015610fd4573d6000803e3d6000fd5b5061010460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663485cc95561105d61076a565b306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561110f57600080fd5b505af1158015611123573d6000803e3d6000fd5b505050505b816101038190555080600060016101000a81548160ff0219169083151502179055505050565b6111566106b1565b151561116157600080fd5b61116b82826116e0565b5050565b60006111866035548361171890919063ffffffff16565b9050919050565b60008082840190508381101515156111a457600080fd5b8091505092915050565b6111b88282611756565b5050565b5050565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b15801561127e57600080fd5b505af1158015611292573d6000803e3d6000fd5b5050505050565b5050565b6112a5610906565b156113ed5761010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561133157600080fd5b505af1158015611345573d6000803e3d6000fd5b5050505061010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156113d057600080fd5b505af11580156113e4573d6000803e3d6000fd5b5050505061148d565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561147457600080fd5b505af1158015611488573d6000803e3d6000fd5b505050505b61149561184a565b565b600080303b90506000811491505090565b60008060019054906101000a900460ff16806114c857506114c7611497565b5b806114df57506000809054906101000a900460ff16155b1515611579576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506115c8611604565b15156115d057fe5b6000821115156115df57600080fd5b8160698190555080600060016101000a81548160ff0219169083151502179055505050565b6000806035541180156116665750600073ffffffffffffffffffffffffffffffffffffffff16603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b80156116c15750600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600080609c541180156116db57506000609d54115b905090565b6116ea828261184c565b606954611707826116f96106a7565b61118d90919063ffffffff16565b1115151561171457600080fd5b5050565b600080600084141561172d576000915061174f565b828402905082848281151561173e57fe5b0414151561174b57600080fd5b8091505b5092915050565b61175e610df7565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561180057600080fd5b505af1158015611814573d6000803e3d6000fd5b505050506040513d602081101561182a57600080fd5b8101908080519060200190929190505050151561184657600080fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561188857600080fd5b6000811415151561189857600080fd5b5050565b6040516111bf806118ad833901905600608060405234801561001057600080fd5b5061119f806100206000396000f3006080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632348238c146100ca57806338af3eed1461010d57806343d726d614610164578063485cc9551461017b57806351cff8d9146101de578063685ca194146102215780638c52dc411461027c5780639af6549a14610293578063c19d93fb146102aa578063c4d66de8146102e3578063c6dbdf6114610326578063e3a9db1a1461037d578063f340fa01146103d4575b600080fd5b3480156100d657600080fd5b5061010b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061040a565b005b34801561011957600080fd5b506101226104e6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017057600080fd5b50610179610510565b005b34801561018757600080fd5b506101dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105f2565b005b3480156101ea57600080fd5b5061021f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d3565b005b34801561022d57600080fd5b50610262600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107f3565b604051808215151515815260200191505060405180910390f35b34801561028857600080fd5b50610291610825565b005b34801561029f57600080fd5b506102a8610907565b005b3480156102b657600080fd5b506102bf6109bc565b604051808260028111156102cf57fe5b60ff16815260200191505060405180910390f35b3480156102ef57600080fd5b50610324600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109d3565b005b34801561033257600080fd5b5061033b610b12565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561038957600080fd5b506103be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b3c565b6040518082815260200191505060405180910390f35b610408600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b85565b005b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561046657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156104a257600080fd5b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060cb60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561056c57600080fd5b6000600281111561057957fe5b60cb60009054906101000a900460ff16600281111561059457fe5b1415156105a057600080fd5b600260cb60006101000a81548160ff021916908360028111156105bf57fe5b02179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1565b60008060019054906101000a900460ff16806106125750610611610bc5565b5b8061062957506000809054906101000a900460ff16155b15156106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610713826109d3565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561074f57600080fd5b8260cb60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060cb60006101000a81548160ff021916908360028111156107af57fe5b021790555080600060016101000a81548160ff021916908315150217905550505050565b6107dc816107f3565b15156107e757600080fd5b6107f081610bd6565b50565b60006001600281111561080257fe5b60cb60009054906101000a900460ff16600281111561081d57fe5b149050919050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561088157600080fd5b6000600281111561088e57fe5b60cb60009054906101000a900460ff1660028111156108a957fe5b1415156108b557600080fd5b600160cb60006101000a81548160ff021916908360028111156108d457fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b60028081111561091357fe5b60cb60009054906101000a900460ff16600281111561092e57fe5b14151561093a57600080fd5b60cb60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156109b9573d6000803e3d6000fd5b50565b600060cb60009054906101000a900460ff16905090565b60008060019054906101000a900460ff16806109f357506109f2610bc5565b5b80610a0a57506000809054906101000a900460ff16155b1515610aa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610af482610d54565b80600060016101000a81548160ff0219169083151502179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006002811115610b9257fe5b60cb60009054906101000a900460ff166002811115610bad57fe5b141515610bb957600080fd5b610bc281610e93565b50565b600080303b90506000811491505090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c3457600080fd5b606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d01573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b60008060019054906101000a900460ff1680610d745750610d73610bc5565b5b80610d8b57506000809054906101000a900460ff16155b1515610e25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610e7582610fdb565b80600060016101000a81548160ff0219169083151502179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ef157600080fd5b349050610f4681606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461115290919063ffffffff16565b606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b60008060019054906101000a900460ff1680610ffb5750610ffa610bc5565b5b8061101257506000809054906101000a900460ff16155b15156110ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff0219169083151502179055505050565b600080828401905083811015151561116957600080fd5b80915050929150505600a165627a7a72305820e704fec39de84f26bd48874ff5a7c2d6f17cf272f15325dd3a3260ea376b34d60029a165627a7a72305820e63f74fc1884a03f904e1047a8948860442aa390bcd185f4d7c7288ecf75a3e90029",
  "sourceMap": "1494:706:22:-;;;429:5:6;403:31;;;;;;;;;;;;;;;;;;;;1494:706:22;8:9:-1;5:2;;;30:1;27;20:12;5:2;1494:706:22;;;;;;;",
  "deployedSourceMap": "1494:706:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:21:5;2723:10;2713:9;:21::i;:::-;1494:706:22;1721:154:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1721:154:14;;;;;;;;;;;;;;;;;;;;;;;;;;;3076:68:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3076:68:5;;;;;;;;;;;;;;;;;;;;;;;676:66:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;676:66:12;;;;;;;;;;;;;;;;;;;;;;;1226:68:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1226:68:8;;;;;;;;;;;;;;;;;;;;;;;3198:79:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3198:79:5;;;;;;;;;;;;;;;;;;;;;;;1380:187:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1380:187:14;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1221:82:14;;;;;;;;;;;;;;;;;;;;;;;772:161:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;772:161:6;;;;;;850:86:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;850:86:12;;;;;;;;;;;;;;;;;;;;;;;;;;;2927:72:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2927:72:5;;;;;;;;;;;;;;;;;;;;;;;;;;;1607:557:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1607:557:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1694:88:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1694:88:8;;;;;;;;;;;;;;;;;;;;;;;;;;;548:76:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;548:76:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2242:241:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2242:241:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1082:82:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1082:82:14;;;;;;;;;;;;;;;;;;;;;;;1436:145:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1436:145:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:341:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;684:341:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3412:575:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2790:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2790:69:5;;;;;;;;;;;;;;;;;;;;;;;;;;;724:428:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;724:428:8;;;;;;;;;;;;;;;;;;;;;;;;;;3412:575:5;3474:17;3604:14;3494:9;3474:29;;3509:44;3530:11;3543:9;3509:20;:44::i;:::-;3621:26;3637:9;3621:15;:26::i;:::-;3604:43;;3687:25;3702:9;3687:10;;:14;;:25;;;;:::i;:::-;3674:10;:38;;;;3719:37;3736:11;3749:6;3719:16;:37::i;:::-;3808:11;3767:89;;3790:10;3767:89;;;3827:9;3844:6;3767:89;;;;;;;;;;;;;;;;;;;;;;;;3863:46;3886:11;3899:9;3863:22;:46::i;:::-;3916:15;:13;:15::i;:::-;3937:45;3959:11;3972:9;3937:21;:45::i;:::-;3412:575;;;:::o;1721:154:14:-;1763:4;1858:12;;1840:15;:30;1833:37;;1721:154;:::o;3076:68:5:-;3112:7;3134:5;;3127:12;;3076:68;:::o;676:66:12:-;711:7;733:4;;726:11;;676:66;:::o;1226:68:8:-;1262:7;1284:5;;1277:12;;1226:68;:::o;3198:79:5:-;3240:7;3262:10;;3255:17;;3198:79;:::o;1380:187:14:-;1419:4;1515:12;;1496:15;:31;;:66;;;;;1550:12;;1531:15;:31;;1496:66;1489:73;;1380:187;:::o;1221:82::-;1264:7;1286:12;;1279:19;;1221:82;:::o;772:161:6:-;814:10;;;;;;;;;;;813:11;805:20;;;;;;;;839:11;:9;:11::i;:::-;831:20;;;;;;;;858:15;:13;:15::i;:::-;884:20;;;;;;;;;;924:4;911:10;;:17;;;;;;;;;;;;;;;;;;772:161::o;850:86:12:-;893:4;927;;912:11;:9;:11::i;:::-;:19;;905:26;;850:86;:::o;2927:72:5:-;2965:7;2987;;;;;;;;;;;2980:14;;2927:72;:::o;1607:557:22:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;:15::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;1814:41:22;1835:4;1841:6;1849:5;1814:20;:41::i;:::-;1861:31;1888:3;1861:26;:31::i;:::-;1898:51;1924:11;1937;1898:25;:51::i;:::-;1955:36;1986:4;1955:30;:36::i;:::-;2155:3;2147:4;:11;;2139:20;;;;;;;;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;1607:557:22;;;;;;;;:::o;1694:88:8:-;1738:4;1772:5;;1757:11;:9;:11::i;:::-;:20;;1750:27;;1694:88;:::o;548:76:6:-;590:4;609:10;;;;;;;;;;;602:17;;548:76;:::o;2242:241:5:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;:15::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;2346:1:5;2339:4;:8;2331:17;;;;;;;;2380:1;2362:20;;:6;:20;;;;2354:29;;;;;;;;2414:1;2397:19;;:5;:19;;;;2389:28;;;;;;;;2432:4;2424:5;:12;;;;2452:6;2442:7;;:16;;;;;;;;;;;;;;;;;;2473:5;2464:6;;:14;;;;;;;;;;;;;;;;;;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;2242:241:5;;;;:::o;1082:82:14:-;1125:7;1147:12;;1140:19;;1082:82;:::o;1436:145:8:-;1499:11;:9;:11::i;:::-;1491:20;;;;;;;;1526:13;:11;:13::i;:::-;1525:14;1517:23;;;;;;;;1547:7;;;;;;;;;;;:16;;;1564:11;1547:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1547:29:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1547:29:8;;;;1436:145;:::o;684:341:14:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;:15::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;778:31:14;:29;:31::i;:::-;771:39;;;;;;898:15;883:11;:30;;875:39;;;;;;;;943:11;928;:26;;920:35;;;;;;;;977:11;962:12;:26;;;;1009:11;994:12;:26;;;;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;684:341:14;;;:::o;2790:69:5:-;2827:6;2848;;;;;;;;;;;2841:13;;2790:69;:::o;724:428:8:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;:15::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;844:36:8;:34;:36::i;:::-;837:44;;;;;;903:1;896:4;:8;888:17;;;;;;;;1031:1;1003:30;;1011:7;;;;;;;;;;;1003:30;;;999:130;;;1053:18;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1053:18:8;1043:7;;:28;;;;;;;;;;;;;;;;;;1079:7;;;;;;;;;;;:18;;;1098:8;:6;:8::i;:::-;1116:4;1079:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1079:43:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1079:43:8;;;;999:130;1143:4;1135:5;:12;;;;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;724:428:8;;:::o;2179:176:14:-;487:8;:6;:8::i;:::-;479:17;;;;;;;;2300:50;2327:11;2340:9;2300:26;:50::i;:::-;2179:176;;:::o;6773:120:5:-;6844:7;6868:20;6882:5;;6868:9;:13;;:20;;;;:::i;:::-;6861:27;;6773:120;;;:::o;1273:131:30:-;1331:7;1346:9;1362:1;1358;:5;1346:17;;1382:1;1377;:6;;1369:15;;;;;;;;1398:1;1391:8;;1273:131;;;;;:::o;6010:146:5:-;6111:40;6126:11;6139;6111:14;:40::i;:::-;6010:146;;:::o;6407:129::-;;;:::o;2157:89:8:-;2197:7;;;;;;;;;;;:15;;;2219:9;2230:10;2197:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2197:44:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2197:44:8;;;;;2157:89::o;5227:128:5:-;;;:::o;1867:202:8:-;1911:13;:11;:13::i;:::-;1907:130;;;1934:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1934:15:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1934:15:8;;;;1957:7;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1957:29:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1957:29:8;;;;1907:130;;;2007:7;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2007:23:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2007:23:8;;;;1907:130;2043:21;:19;:21::i;:::-;1867:202::o;1341:467:120:-;1388:4;1729:10;1774:7;1762:20;1756:26;;1802:1;1796:2;:7;1789:14;;1341:467;;:::o;480:141:12:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;:15::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;545:31:12;:29;:31::i;:::-;538:39;;;;;;598:1;592:3;:7;584:16;;;;;;;;613:3;606:4;:10;;;;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;480:141:12;;:::o;4123:144:5:-;4177:4;4206:1;4198:5;;:9;4197:38;;;;;4232:1;4213:21;;:7;;;;;;;;;;;:21;;;;4197:38;:64;;;;;4258:1;4240:20;;:6;;;;;;;;;;;:20;;;;4197:64;4189:73;;4123:144;:::o;1879:120:14:-;1933:4;1969:1;1954:12;;:16;1953:40;;;;;1991:1;1976:12;;:16;1953:40;1945:49;;1879:120;:::o;1120:207:12:-;1223:50;1250:11;1263:9;1223:26;:50::i;:::-;1317:4;;1287:26;1303:9;1287:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1279:43;;;;;;;;1120:207;;:::o;205:381:30:-;263:7;524:9;492:1;487;:6;483:35;;;510:1;503:8;;;;483:35;540:1;536;:5;524:17;;564:1;559;555;:5;;;;;;;;:10;547:19;;;;;;;;580:1;573:8;;205:381;;;;;;:::o;562:251:10:-;767:7;:5;:7::i;:::-;745:36;;;782:11;795;745:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;745:62:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;745:62:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;745:62:10;;;;;;;;;;;;;;;;730:78;;;;;;;;562:251;;:::o;1130:39:6:-;:::o;4780:171:5:-;4914:1;4891:25;;:11;:25;;;;4883:34;;;;;;;;4944:1;4931:9;:14;;4923:23;;;;;;;;4780:171;;:::o;1494:706:22:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"../crowdsale/validation/CappedCrowdsale.sol\";\nimport \"../crowdsale/distribution/RefundableCrowdsale.sol\";\nimport \"../crowdsale/emission/MintedCrowdsale.sol\";\nimport \"../token/ERC20/ERC20Mintable.sol\";\n\n\n/**\n * @title SampleCrowdsaleToken\n * @dev Very simple ERC20 Token that can be minted.\n * It is meant to be used in a crowdsale contract.\n */\ncontract SampleCrowdsaleToken is Initializable, ERC20Mintable {\n\n  string public name;\n  string public symbol;\n  uint8 public decimals;\n\n  function initialize(address sender) public initializer {\n    ERC20Mintable.initialize(sender);\n\n    name = \"Sample Crowdsale Token\";\n    symbol = \"SCT\";\n    decimals = 18;\n  }\n\n  uint256[50] private ______gap;\n}\n\n\n/**\n * @title SampleCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\n// XXX There doesn't seem to be a way to split this line that keeps solium\n// happy. See:\n// https://github.com/duaraghav8/Solium/issues/205\n// --elopio - 2018-05-10\n// solium-disable-next-line max-len\ncontract SampleCrowdsale is Initializable, Crowdsale, CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale {\n\n  function initialize(\n    uint256 openingTime,\n    uint256 closingTime,\n    uint256 rate,\n    address wallet,\n    uint256 cap,\n    ERC20Mintable token,\n    uint256 goal\n  )\n    public\n    initializer\n  {\n    Crowdsale.initialize(rate, wallet, token);\n    CappedCrowdsale.initialize(cap);\n    TimedCrowdsale.initialize(openingTime, closingTime);\n    RefundableCrowdsale.initialize(goal);\n\n    //As goal needs to be met for a successful crowdsale\n    //the value needs to less or equal than a cap which is limit for accepted funds\n    require(goal <= cap);\n  }\n\n  uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/examples/SampleCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        2860
      ],
      "SampleCrowdsaleToken": [
        2792
      ]
    },
    "id": 2861,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2746,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:22"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 2747,
        "nodeType": "ImportDirective",
        "scope": 2861,
        "sourceUnit": 9824,
        "src": "26:45:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 2748,
        "nodeType": "ImportDirective",
        "scope": 2861,
        "sourceUnit": 1495,
        "src": "72:53:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 2749,
        "nodeType": "ImportDirective",
        "scope": 2861,
        "sourceUnit": 1153,
        "src": "126:59:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 2750,
        "nodeType": "ImportDirective",
        "scope": 2861,
        "sourceUnit": 1275,
        "src": "186:51:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 2751,
        "nodeType": "ImportDirective",
        "scope": 2861,
        "sourceUnit": 7510,
        "src": "238:42:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2752,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9823,
              "src": "458:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9823",
                "typeString": "contract Initializable"
              }
            },
            "id": 2753,
            "nodeType": "InheritanceSpecifier",
            "src": "458:13:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2754,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7509,
              "src": "473:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$7509",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 2755,
            "nodeType": "InheritanceSpecifier",
            "src": "473:13:22"
          }
        ],
        "contractDependencies": [
          316,
          7280,
          7509,
          7701,
          9823
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 2792,
        "linearizedBaseContracts": [
          2792,
          7509,
          316,
          7280,
          7701,
          9823
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2757,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 2792,
            "src": "492:18:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2756,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "492:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2759,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2792,
            "src": "514:20:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2758,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "514:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2761,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 2792,
            "src": "538:21:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2760,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "538:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2786,
              "nodeType": "Block",
              "src": "619:120:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2771,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2763,
                        "src": "650:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2768,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7509,
                        "src": "625:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$7509_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 2770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7485,
                      "src": "625:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "625:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2773,
                  "nodeType": "ExpressionStatement",
                  "src": "625:32:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2774,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2757,
                      "src": "664:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                      "id": 2775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "671:24:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                        "typeString": "literal_string \"Sample Crowdsale Token\""
                      },
                      "value": "Sample Crowdsale Token"
                    },
                    "src": "664:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2777,
                  "nodeType": "ExpressionStatement",
                  "src": "664:31:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2778,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2759,
                      "src": "701:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "534354",
                      "id": 2779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "710:5:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                        "typeString": "literal_string \"SCT\""
                      },
                      "value": "SCT"
                    },
                    "src": "701:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2781,
                  "nodeType": "ExpressionStatement",
                  "src": "701:14:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2782,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2761,
                      "src": "721:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 2783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "732:2:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "721:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2785,
                  "nodeType": "ExpressionStatement",
                  "src": "721:13:22"
                }
              ]
            },
            "documentation": null,
            "id": 2787,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2766,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2765,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9804,
                  "src": "607:11:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "607:11:22"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2763,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2787,
                  "src": "584:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "583:16:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "619:0:22"
            },
            "scope": 2792,
            "src": "564:175:22",
            "stateMutability": "nonpayable",
            "superFunction": 7485,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2791,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2792,
            "src": "743:29:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2788,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "743:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2790,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2789,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "751:2:22",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "743:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2861,
        "src": "425:350:22"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2793,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9823,
              "src": "1522:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9823",
                "typeString": "contract Initializable"
              }
            },
            "id": 2794,
            "nodeType": "InheritanceSpecifier",
            "src": "1522:13:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2795,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 849,
              "src": "1537:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$849",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 2796,
            "nodeType": "InheritanceSpecifier",
            "src": "1537:9:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2797,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1494,
              "src": "1548:15:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1494",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 2798,
            "nodeType": "InheritanceSpecifier",
            "src": "1548:15:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2799,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1152,
              "src": "1565:19:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1152",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 2800,
            "nodeType": "InheritanceSpecifier",
            "src": "1565:19:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2801,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1274,
              "src": "1586:15:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$1274",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 2802,
            "nodeType": "InheritanceSpecifier",
            "src": "1586:15:22"
          }
        ],
        "contractDependencies": [
          849,
          907,
          1152,
          1274,
          1494,
          1780,
          9823
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 2860,
        "linearizedBaseContracts": [
          2860,
          1274,
          1152,
          907,
          1780,
          1494,
          849,
          9823
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2854,
              "nodeType": "Block",
              "src": "1808:356:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2824,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2808,
                        "src": "1835:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2825,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2810,
                        "src": "1841:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2826,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2814,
                        "src": "1849:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$7509",
                          "typeString": "contract ERC20Mintable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$7509",
                          "typeString": "contract ERC20Mintable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2821,
                        "name": "Crowdsale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "1814:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Crowdsale_$849_$",
                          "typeString": "type(contract Crowdsale)"
                        }
                      },
                      "id": 2823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 632,
                      "src": "1814:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_contract$_IERC20_$7701_$returns$__$",
                        "typeString": "function (uint256,address,contract IERC20)"
                      }
                    },
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1814:41:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2828,
                  "nodeType": "ExpressionStatement",
                  "src": "1814:41:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2832,
                        "name": "cap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2812,
                        "src": "1888:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2829,
                        "name": "CappedCrowdsale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1494,
                        "src": "1861:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1494_$",
                          "typeString": "type(contract CappedCrowdsale)"
                        }
                      },
                      "id": 2831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1445,
                      "src": "1861:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1861:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "1861:31:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2838,
                        "name": "openingTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "1924:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2839,
                        "name": "closingTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2806,
                        "src": "1937:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2835,
                        "name": "TimedCrowdsale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1780,
                        "src": "1898:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1780_$",
                          "typeString": "type(contract TimedCrowdsale)"
                        }
                      },
                      "id": 2837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1698,
                      "src": "1898:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:51:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2841,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:51:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2845,
                        "name": "goal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2816,
                        "src": "1986:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2842,
                        "name": "RefundableCrowdsale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "1955:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1152_$",
                          "typeString": "type(contract RefundableCrowdsale)"
                        }
                      },
                      "id": 2844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1060,
                      "src": "1955:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2847,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:36:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2849,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2816,
                          "src": "2147:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2850,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2812,
                          "src": "2155:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2147:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9841,
                        9842
                      ],
                      "referencedDeclaration": 9841,
                      "src": "2139:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2139:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2853,
                  "nodeType": "ExpressionStatement",
                  "src": "2139:20:22"
                }
              ]
            },
            "documentation": null,
            "id": 2855,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2818,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9804,
                  "src": "1794:11:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1794:11:22"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2804,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1632:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2806,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1657:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2808,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1682:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1682:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2810,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1700:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2812,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1720:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2814,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1737:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$7509",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2813,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7509,
                    "src": "1737:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7509",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2816,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1762:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1626:152:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1808:0:22"
            },
            "scope": 2860,
            "src": "1607:557:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2859,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2860,
            "src": "2168:29:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2856,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2168:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2858,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2857,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2176:2:22",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "2168:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2861,
        "src": "1494:706:22"
      }
    ],
    "src": "0:2201:22"
  },
  "legacyAST": {
    "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        2860
      ],
      "SampleCrowdsaleToken": [
        2792
      ]
    },
    "id": 2861,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2746,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:22"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 2747,
        "nodeType": "ImportDirective",
        "scope": 2861,
        "sourceUnit": 9824,
        "src": "26:45:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 2748,
        "nodeType": "ImportDirective",
        "scope": 2861,
        "sourceUnit": 1495,
        "src": "72:53:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 2749,
        "nodeType": "ImportDirective",
        "scope": 2861,
        "sourceUnit": 1153,
        "src": "126:59:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 2750,
        "nodeType": "ImportDirective",
        "scope": 2861,
        "sourceUnit": 1275,
        "src": "186:51:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 2751,
        "nodeType": "ImportDirective",
        "scope": 2861,
        "sourceUnit": 7510,
        "src": "238:42:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2752,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9823,
              "src": "458:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9823",
                "typeString": "contract Initializable"
              }
            },
            "id": 2753,
            "nodeType": "InheritanceSpecifier",
            "src": "458:13:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2754,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7509,
              "src": "473:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$7509",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 2755,
            "nodeType": "InheritanceSpecifier",
            "src": "473:13:22"
          }
        ],
        "contractDependencies": [
          316,
          7280,
          7509,
          7701,
          9823
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 2792,
        "linearizedBaseContracts": [
          2792,
          7509,
          316,
          7280,
          7701,
          9823
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2757,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 2792,
            "src": "492:18:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2756,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "492:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2759,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2792,
            "src": "514:20:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2758,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "514:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2761,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 2792,
            "src": "538:21:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2760,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "538:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2786,
              "nodeType": "Block",
              "src": "619:120:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2771,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2763,
                        "src": "650:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2768,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7509,
                        "src": "625:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$7509_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 2770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7485,
                      "src": "625:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "625:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2773,
                  "nodeType": "ExpressionStatement",
                  "src": "625:32:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2774,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2757,
                      "src": "664:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                      "id": 2775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "671:24:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                        "typeString": "literal_string \"Sample Crowdsale Token\""
                      },
                      "value": "Sample Crowdsale Token"
                    },
                    "src": "664:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2777,
                  "nodeType": "ExpressionStatement",
                  "src": "664:31:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2778,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2759,
                      "src": "701:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "534354",
                      "id": 2779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "710:5:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                        "typeString": "literal_string \"SCT\""
                      },
                      "value": "SCT"
                    },
                    "src": "701:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2781,
                  "nodeType": "ExpressionStatement",
                  "src": "701:14:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2782,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2761,
                      "src": "721:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 2783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "732:2:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "721:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2785,
                  "nodeType": "ExpressionStatement",
                  "src": "721:13:22"
                }
              ]
            },
            "documentation": null,
            "id": 2787,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2766,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2765,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9804,
                  "src": "607:11:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "607:11:22"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2763,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2787,
                  "src": "584:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "583:16:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "619:0:22"
            },
            "scope": 2792,
            "src": "564:175:22",
            "stateMutability": "nonpayable",
            "superFunction": 7485,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2791,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2792,
            "src": "743:29:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2788,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "743:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2790,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2789,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "751:2:22",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "743:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2861,
        "src": "425:350:22"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2793,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9823,
              "src": "1522:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9823",
                "typeString": "contract Initializable"
              }
            },
            "id": 2794,
            "nodeType": "InheritanceSpecifier",
            "src": "1522:13:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2795,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 849,
              "src": "1537:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$849",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 2796,
            "nodeType": "InheritanceSpecifier",
            "src": "1537:9:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2797,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1494,
              "src": "1548:15:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1494",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 2798,
            "nodeType": "InheritanceSpecifier",
            "src": "1548:15:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2799,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1152,
              "src": "1565:19:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1152",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 2800,
            "nodeType": "InheritanceSpecifier",
            "src": "1565:19:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2801,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1274,
              "src": "1586:15:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$1274",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 2802,
            "nodeType": "InheritanceSpecifier",
            "src": "1586:15:22"
          }
        ],
        "contractDependencies": [
          849,
          907,
          1152,
          1274,
          1494,
          1780,
          9823
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 2860,
        "linearizedBaseContracts": [
          2860,
          1274,
          1152,
          907,
          1780,
          1494,
          849,
          9823
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2854,
              "nodeType": "Block",
              "src": "1808:356:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2824,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2808,
                        "src": "1835:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2825,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2810,
                        "src": "1841:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2826,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2814,
                        "src": "1849:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$7509",
                          "typeString": "contract ERC20Mintable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$7509",
                          "typeString": "contract ERC20Mintable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2821,
                        "name": "Crowdsale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "1814:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Crowdsale_$849_$",
                          "typeString": "type(contract Crowdsale)"
                        }
                      },
                      "id": 2823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 632,
                      "src": "1814:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_contract$_IERC20_$7701_$returns$__$",
                        "typeString": "function (uint256,address,contract IERC20)"
                      }
                    },
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1814:41:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2828,
                  "nodeType": "ExpressionStatement",
                  "src": "1814:41:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2832,
                        "name": "cap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2812,
                        "src": "1888:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2829,
                        "name": "CappedCrowdsale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1494,
                        "src": "1861:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1494_$",
                          "typeString": "type(contract CappedCrowdsale)"
                        }
                      },
                      "id": 2831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1445,
                      "src": "1861:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1861:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "1861:31:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2838,
                        "name": "openingTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "1924:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2839,
                        "name": "closingTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2806,
                        "src": "1937:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2835,
                        "name": "TimedCrowdsale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1780,
                        "src": "1898:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1780_$",
                          "typeString": "type(contract TimedCrowdsale)"
                        }
                      },
                      "id": 2837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1698,
                      "src": "1898:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:51:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2841,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:51:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2845,
                        "name": "goal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2816,
                        "src": "1986:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2842,
                        "name": "RefundableCrowdsale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "1955:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1152_$",
                          "typeString": "type(contract RefundableCrowdsale)"
                        }
                      },
                      "id": 2844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1060,
                      "src": "1955:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2847,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:36:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2849,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2816,
                          "src": "2147:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2850,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2812,
                          "src": "2155:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2147:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9841,
                        9842
                      ],
                      "referencedDeclaration": 9841,
                      "src": "2139:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2139:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2853,
                  "nodeType": "ExpressionStatement",
                  "src": "2139:20:22"
                }
              ]
            },
            "documentation": null,
            "id": 2855,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2818,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9804,
                  "src": "1794:11:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1794:11:22"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2804,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1632:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2806,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1657:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2808,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1682:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1682:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2810,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1700:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2812,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1720:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2814,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1737:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$7509",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2813,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7509,
                    "src": "1737:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7509",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2816,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1762:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1626:152:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1808:0:22"
            },
            "scope": 2860,
            "src": "1607:557:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2859,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2860,
            "src": "2168:29:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2856,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2168:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2858,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2857,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2176:2:22",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "2168:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2861,
        "src": "1494:706:22"
      }
    ],
    "src": "0:2201:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-22T15:51:22.518Z"
}