{
  "contractName": "EscrowMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferPrimary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "primary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "depositsOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061002d3361003264010000000002610484176401000000009004565b61032a565b60008060019054906101000a900460ff16806100615750610060610193640100000000026401000000009004565b5b8061007857506000809054906101000a900460ff16155b1515610112576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610175826101a46401000000000261078f176401000000009004565b80600060016101000a81548160ff0219169083151502179055505050565b600080303b90506000811491505090565b60008060019054906101000a900460ff16806101d357506101d2610193640100000000026401000000009004565b5b806101ea57506000809054906101000a900460ff16155b1515610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff0219169083151502179055505050565b610953806103396000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632348238c1461007d57806351cff8d9146100c0578063c4d66de814610103578063c6dbdf6114610146578063e3a9db1a1461019d578063f340fa01146101f4575b600080fd5b34801561008957600080fd5b506100be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022a565b005b3480156100cc57600080fd5b50610101600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610306565b005b34801561010f57600080fd5b50610144600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610484565b005b34801561015257600080fd5b5061015b6105c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a957600080fd5b506101de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105ed565b6040518082815260200191505060405180910390f35b610228600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610636565b005b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561028657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156102c257600080fd5b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561036457600080fd5b606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610431573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b60008060019054906101000a900460ff16806104a457506104a361077e565b5b806104bb57506000809054906101000a900460ff16155b1515610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506105a58261078f565b80600060016101000a81548160ff0219169083151502179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561069457600080fd5b3490506106e981606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461090690919063ffffffff16565b606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b600080303b90506000811491505090565b60008060019054906101000a900460ff16806107af57506107ae61077e565b5b806107c657506000809054906101000a900460ff16155b1515610860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff0219169083151502179055505050565b600080828401905083811015151561091d57600080fd5b80915050929150505600a165627a7a723058205526c5d6e084425b28044963446c28817feb639052b076e03d5fc8c12c683b4b0029",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632348238c1461007d57806351cff8d9146100c0578063c4d66de814610103578063c6dbdf6114610146578063e3a9db1a1461019d578063f340fa01146101f4575b600080fd5b34801561008957600080fd5b506100be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022a565b005b3480156100cc57600080fd5b50610101600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610306565b005b34801561010f57600080fd5b50610144600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610484565b005b34801561015257600080fd5b5061015b6105c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a957600080fd5b506101de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105ed565b6040518082815260200191505060405180910390f35b610228600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610636565b005b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561028657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156102c257600080fd5b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561036457600080fd5b606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610431573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b60008060019054906101000a900460ff16806104a457506104a361077e565b5b806104bb57506000809054906101000a900460ff16155b1515610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506105a58261078f565b80600060016101000a81548160ff0219169083151502179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561069457600080fd5b3490506106e981606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461090690919063ffffffff16565b606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b600080303b90506000811491505090565b60008060019054906101000a900460ff16806107af57506107ae61077e565b5b806107c657506000809054906101000a900460ff16155b1515610860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff0219169083151502179055505050565b600080828401905083811015151561091d57600080fd5b80915050929150505600a165627a7a723058205526c5d6e084425b28044963446c28817feb639052b076e03d5fc8c12c683b4b0029",
  "sourceMap": "59:97:55:-;;;93:61;8:9:-1;5:2;;;30:1;27;20:12;5:2;93:61:55;120:29;138:10;120:17;;;;;:29;;;:::i;:::-;59:97;;674:94:89;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;;;:15;;;:::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;735:28:89;756:6;735:20;;;;;:28;;;:::i;:::-;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;674:94:89;;:::o;1341:467:120:-;1388:4;1729:10;1774:7;1762:20;1756:26;;1802:1;1796:2;:7;1789:14;;1341:467;;:::o;364:83:87:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;;;:15;;;:::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;436:6:87;425:8;;:17;;;;;;;;;;;;;;;;;;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;364:83:87;;:::o;59:97:55:-;;;;;;;",
  "deployedSourceMap": "59:97:55:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:133:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:133:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;1330:191:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1330:191:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;674:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;674:94:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;608:75:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;608:75:87;;;;;;;;;;;;;;;;;;;;;;;;;;;772:99:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;772:99:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:133:87;583:8;;;;;;;;;;;569:22;;:10;:22;;;561:31;;;;;;;;785:1;764:23;;:9;:23;;;;756:32;;;;;;;;806:9;795:8;;:20;;;;;;;;;;;;;;;;;;687:133;:::o;1330:191:89:-;1388:15;583:8:87;;;;;;;;;;;569:22;;:10;:22;;;561:31;;;;;;;;1406:9:89;:16;1416:5;1406:16;;;;;;;;;;;;;;;;1388:34;;1448:1;1429:9;:16;1439:5;1429:16;;;;;;;;;;;;;;;:20;;;;1456:5;:14;;:23;1471:7;1456:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1456:23:89;1501:5;1491:25;;;1508:7;1491:25;;;;;;;;;;;;;;;;;;1330:191;;:::o;674:94::-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;:15::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;735:28:89;756:6;735:20;:28::i;:::-;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;674:94:89;;:::o;608:75:87:-;648:7;670:8;;;;;;;;;;;663:15;;608:75;:::o;772:99:89:-;828:7;850:9;:16;860:5;850:16;;;;;;;;;;;;;;;;843:23;;772:99;;;:::o;1000:185::-;1065:14;583:8:87;;;;;;;;;;;569:22;;:10;:22;;;561:31;;;;;;;;1082:9:89;1065:26;;1116:28;1137:6;1116:9;:16;1126:5;1116:16;;;;;;;;;;;;;;;;:20;;:28;;;;:::i;:::-;1097:9;:16;1107:5;1097:16;;;;;;;;;;;;;;;:47;;;;1166:5;1156:24;;;1173:6;1156:24;;;;;;;;;;;;;;;;;;1000:185;;:::o;1341:467:120:-;1388:4;1729:10;1774:7;1762:20;1756:26;;1802:1;1796:2;:7;1789:14;;1341:467;;:::o;364:83:87:-;1121:20:120;1016:12;;;;;;;;;;;:31;;;;1032:15;:13;:15::i;:::-;1016:31;:47;;;;1052:11;;;;;;;;;;;1051:12;1016:47;1008:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:12;;;;;;;;;;;1121:35;;1177:4;1162:12;;:19;;;;;;;;;;;;;;;;;;1201:4;1187:11;;:18;;;;;;;;;;;;;;;;;;436:6:87;425:8;;:17;;;;;;;;;;;;;;;;;;1235:15:120;1220:12;;:30;;;;;;;;;;;;;;;;;;364:83:87;;:::o;1273:131:30:-;1331:7;1346:9;1362:1;1358;:5;1346:17;;1382:1;1377;:6;;1369:15;;;;;;;;1398:1;1391:8;;1273:131;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../payment/Escrow.sol\";\n\ncontract EscrowMock is Escrow {\n  constructor() public {\n    Escrow.initialize(msg.sender);\n  }\n}\n",
  "sourcePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/mocks/EscrowMock.sol",
  "ast": {
    "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/mocks/EscrowMock.sol",
    "exportedSymbols": {
      "EscrowMock": [
        4469
      ]
    },
    "id": 4470,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4454,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:55"
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/payment/Escrow.sol",
        "file": "../payment/Escrow.sol",
        "id": 4455,
        "nodeType": "ImportDirective",
        "scope": 4470,
        "sourceUnit": 6323,
        "src": "26:31:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4456,
              "name": "Escrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6322,
              "src": "82:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrow_$6322",
                "typeString": "contract Escrow"
              }
            },
            "id": 4457,
            "nodeType": "InheritanceSpecifier",
            "src": "82:6:55"
          }
        ],
        "contractDependencies": [
          6151,
          6322,
          9823
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4469,
        "linearizedBaseContracts": [
          4469,
          6322,
          6151,
          9823
        ],
        "name": "EscrowMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4467,
              "nodeType": "Block",
              "src": "114:40:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4463,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9838,
                          "src": "138:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "138:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4460,
                        "name": "Escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6322,
                        "src": "120:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Escrow_$6322_$",
                          "typeString": "type(contract Escrow)"
                        }
                      },
                      "id": 4462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6245,
                      "src": "120:17:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "120:29:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4466,
                  "nodeType": "ExpressionStatement",
                  "src": "120:29:55"
                }
              ]
            },
            "documentation": null,
            "id": 4468,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "104:2:55"
            },
            "payable": false,
            "returnParameters": {
              "id": 4459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "114:0:55"
            },
            "scope": 4469,
            "src": "93:61:55",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4470,
        "src": "59:97:55"
      }
    ],
    "src": "0:157:55"
  },
  "legacyAST": {
    "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/mocks/EscrowMock.sol",
    "exportedSymbols": {
      "EscrowMock": [
        4469
      ]
    },
    "id": 4470,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4454,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:55"
      },
      {
        "absolutePath": "/home/spalladino/Projects/openzeppelin-eth/contracts/payment/Escrow.sol",
        "file": "../payment/Escrow.sol",
        "id": 4455,
        "nodeType": "ImportDirective",
        "scope": 4470,
        "sourceUnit": 6323,
        "src": "26:31:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4456,
              "name": "Escrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6322,
              "src": "82:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrow_$6322",
                "typeString": "contract Escrow"
              }
            },
            "id": 4457,
            "nodeType": "InheritanceSpecifier",
            "src": "82:6:55"
          }
        ],
        "contractDependencies": [
          6151,
          6322,
          9823
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4469,
        "linearizedBaseContracts": [
          4469,
          6322,
          6151,
          9823
        ],
        "name": "EscrowMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4467,
              "nodeType": "Block",
              "src": "114:40:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4463,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9838,
                          "src": "138:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "138:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4460,
                        "name": "Escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6322,
                        "src": "120:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Escrow_$6322_$",
                          "typeString": "type(contract Escrow)"
                        }
                      },
                      "id": 4462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6245,
                      "src": "120:17:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "120:29:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4466,
                  "nodeType": "ExpressionStatement",
                  "src": "120:29:55"
                }
              ]
            },
            "documentation": null,
            "id": 4468,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "104:2:55"
            },
            "payable": false,
            "returnParameters": {
              "id": 4459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "114:0:55"
            },
            "scope": 4469,
            "src": "93:61:55",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4470,
        "src": "59:97:55"
      }
    ],
    "src": "0:157:55"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-22T15:51:22.527Z"
}